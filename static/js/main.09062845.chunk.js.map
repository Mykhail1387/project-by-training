{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/AppHW.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","text","FeedbackOptions","onLeaveFeedbackGood","onLeaveFeedbackNeutral","onLeaveFeedbackBad","btn","type","onClick","Section","title","Notification","message","AppHW","state","countTotalGood","e","setState","prevState","countTotalNeutral","countTotalBad","countTotalFeedback","countPositiveFeedbackPercentage","result","parseInt","this","style","fontSize","Component","ReactDOM","render","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,IAAM,+B,qBCAxBD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,6B,oKCYVC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,6BACI,uBAAGC,UAAWC,IAAOC,MAArB,SAAkCP,GAClC,uBAAGK,UAAWC,IAAOC,MAArB,YAAqCN,GACrC,uBAAGI,UAAWC,IAAOC,MAArB,QAAiCL,GACjC,uBAAGG,UAAWC,IAAOC,MAArB,UAAmCJ,GACnC,uBAAGE,UAAWC,IAAOC,MAArB,sBAA+CH,EAA/C,O,gBCEOI,EARS,SAAC,GAAD,IAAGC,EAAH,EAAGA,oBAAqBC,EAAxB,EAAwBA,uBAAwBC,EAAhD,EAAgDA,mBAAhD,OACpB,yBAAKN,UAAU,YACX,4BAAQA,UAAWC,IAAOM,IAAKC,KAAK,SAASC,QAASL,GAAtD,QACA,4BAAQJ,UAAWC,IAAOM,IAAKC,KAAK,SAASC,QAASJ,GAAtD,WACA,4BAAQL,UAAWC,IAAOM,IAAKC,KAAK,SAASC,QAASH,GAAtD,S,gBCKOI,EATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACZ,oCACI,wBAAIX,UAAWC,IAAOU,OAAQA,K,gBCIvBC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oCACI,uBAAGb,UAAWC,IAAOC,MAAOW,KCEfC,E,2MAEjBC,MAAQ,CACJpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTmB,eAAiB,SAACC,GACd,EAAKC,UAAS,SAAAC,GAEV,MAAO,CACHxB,KAAMwB,EAAUxB,KAAO,O,EAKnCyB,kBAAoB,SAACH,GACjB,EAAKC,UAAS,SAAAC,GAEV,MAAO,CACHvB,QAASuB,EAAUvB,QAAU,O,EAKzCyB,cAAgB,SAACJ,GACb,EAAKC,UAAS,SAAAC,GAEV,MAAO,CACHtB,IAAKsB,EAAUtB,IAAM,O,EAKjCyB,mBAAqB,WAAO,IAChB3B,EAAS,EAAKoB,MAAdpB,KACAC,EAAY,EAAKmB,MAAjBnB,QAIR,OAHgB,EAAKmB,MAAblB,IACaD,EAAUD,G,EAKnC4B,gCAAkC,WAC9B,IAAIC,EAAS,EAAKF,qBACV3B,EAAS,EAAKoB,MAAdpB,KAIR,OAAO8B,SAHO,IACE9B,EAAe6B,I,wEAKzB,IACE7B,EAAS+B,KAAKX,MAAdpB,KACAC,EAAY8B,KAAKX,MAAjBnB,QACAC,EAAQ6B,KAAKX,MAAblB,IACFC,EAAQ4B,KAAKJ,qBACbvB,EAAqB2B,KAAKH,kCAEhC,OACI,oCACI,kBAAC,EAAD,CAASZ,MAAO,0BAEhB,kBAAC,EAAD,CAAiBP,oBAAqBsB,KAAKV,eAAgBX,uBAAwBqB,KAAKN,kBAAmBd,mBAAoBoB,KAAKL,gBAEpI,wBAAIM,MAAO,CAAEC,SAAU,SAAvB,cAEC9B,EAAQ,kBAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoBA,IAAyB,kBAAC,EAAD,CAAcc,QAAS,2B,GApE5HgB,aCEnCC,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,W","file":"static/js/main.09062845.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__14WET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3JzVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3HM6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1plQo\"};","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div>\r\n        <p className={styles.text}>Good: {good}</p>\r\n        <p className={styles.text}>Neutral: {neutral}</p>\r\n        <p className={styles.text}>Bad: {bad}</p>\r\n        <p className={styles.text}>Total: {total}</p>\r\n        <p className={styles.text}>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n)\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedbackGood, onLeaveFeedbackNeutral, onLeaveFeedbackBad }) => (\r\n    <div className=\"btnBlock\">\r\n        <button className={styles.btn} type=\"button\" onClick={onLeaveFeedbackGood}>Good</button>\r\n        <button className={styles.btn} type=\"button\" onClick={onLeaveFeedbackNeutral}>Neutral</button>\r\n        <button className={styles.btn} type=\"button\" onClick={onLeaveFeedbackBad}>Bad</button>\r\n    </div>\r\n)\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title }) => (\r\n    <>\r\n        <h2 className={styles.title}>{title}</h2>\r\n\r\n\r\n    </>\r\n)\r\n\r\n\r\nexport default Section;","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n    <>\r\n        <p className={styles.text}>{message}</p>\r\n    </>\r\n)\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Section from './Section/Section';\r\nimport Notification from './Notification/Notification';\r\n\r\n\r\nexport default class AppHW extends Component {\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    countTotalGood = (e) => {\r\n        this.setState(prevState => {\r\n\r\n            return {\r\n                good: prevState.good + 1,\r\n            }\r\n        })\r\n    }\r\n\r\n    countTotalNeutral = (e) => {\r\n        this.setState(prevState => {\r\n\r\n            return {\r\n                neutral: prevState.neutral + 1\r\n            }\r\n        })\r\n    }\r\n\r\n    countTotalBad = (e) => {\r\n        this.setState(prevState => {\r\n\r\n            return {\r\n                bad: prevState.bad + 1\r\n            }\r\n        })\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const { good } = this.state;\r\n        const { neutral } = this.state;\r\n        const { bad } = this.state;\r\n        const result = bad + neutral + good;\r\n\r\n        return result;\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        let result = this.countTotalFeedback();\r\n        const { good } = this.state;\r\n        const total = 100;\r\n        const percent = good * total / result;\r\n\r\n        return parseInt(percent);\r\n    }\r\n\r\n    render() {\r\n        const { good } = this.state;\r\n        const { neutral } = this.state;\r\n        const { bad } = this.state;\r\n        const total = this.countTotalFeedback();\r\n        const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n        return (\r\n            <>\r\n                <Section title={\"Please leave feedback\"} />\r\n\r\n                <FeedbackOptions onLeaveFeedbackGood={this.countTotalGood} onLeaveFeedbackNeutral={this.countTotalNeutral} onLeaveFeedbackBad={this.countTotalBad} />\r\n\r\n                <h2 style={{ fontSize: '32px' }}>Statistics</h2>\r\n\r\n                {total ? <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} /> : <Notification message={\"No feedback given\"} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import App from './components/App';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nimport AppHW from './components/AppHW';\n\nReactDOM.render(<AppHW />, document.getElementById('root'));"],"sourceRoot":""}